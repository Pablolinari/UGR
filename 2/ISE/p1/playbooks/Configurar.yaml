- name: Configurar servidores 
  hosts: servidoresconfig
  vars_files:
    - ../vars/vars.yml
  tasks: 
    # Creo el usuario admin 
    - name: Crear usuario
      ansible.builtin.user:
        name: "{{username}}"
        state: present
        create_home: true
    # permito que ejecute comandos sin contrasenia aniadiendo la 
    # siguiente linea al archivo 
    - name: Ejecutar comandos sin contrasenia
      ansible.builtin.lineinfile:
        path: "{{pathsudo}}"
        line: "{{username}} ALL=(ALL) NOPASSWD: ALL "
        state: present

    # copio la llave publica del host en el archivo authorized keys 
    # del usuario indicado
    - name: copiar llave publica al usuario
      ansible.posix.authorized_key:
        user: "{{username}}"
        key: "{{lookup('file',adminkey)}}"
        state: present

    - name: crear grupo wheel
      ansible.builtin.group:
        name: "{{groupname}}"
        state: present

    # compruebo que esten creados y los aniado al grupo wheel 
    # si no estan creados los creo 
    - name: aniadir lista de usuarios a wheel 
      ansible.builtin.user:
        name: "{{item.key}}"
        append: yes # para aniadirlo al grupo indicado en groups 
        groups: "{{groupname}}"
        shell: /bin/bash
        password: "{{ '123' | password_hash('sha512') }}" #asigno passwd por defecto , encripto por que si no ansible no la reconoce
        state: present
      loop: "{{userlist | dict2items}}"
    # permito que ejecute comandos sudo los usuarios del grupo wheel
    - name: Ejecutar comandos sudo para el grupo wheel
      ansible.builtin.lineinfile:
        path: "{{pathsudo}}"
        regexp: "%{{groupname}} ALL=(ALL) ALL"
        line: "%{{groupname}} ALL=(ALL) ALL"
        state: present
    - name: Dar acceso por ssh con llave publica a la lista de usuarios
      ansible.posix.authorized_key:
        user: "{{item.key}}"
        key: "{{lookup('file',item.value)}}" # todos usan la misma llave pero se puede cambiar individualmente en el archivo vars
        state: present
      loop: "{{userlist | dict2items}}"

    - name: Deshabilitar acceso por ssh con contrasenia para root
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^#?PermitRootLogin"
        line: "PermitRootLogin prohibit-password"
        state: present

    #reiniciar servicio 
    - name: Reiniciar sshd
      ansible.builtin.service:
        name: sshd
        state: restarted
